name: CI/CD Pipeline for Fullstack App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Set up Node.js for Frontend
      - name: Setup Node.js (Frontend)
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Step 3: Install dependencies (Frontend)
      - name: Install dependencies (Frontend)
        working-directory: /home/runner/work/demo/demo/TODO/todo_frontend
        run: npm install

      # Step 4: Build Frontend
      - name: Build Frontend
        working-directory: /home/runner/work/demo/demo/TODO/todo_frontend
        run: npm run build
        
      # Step 5: Install dependencies (Backend)
      - name: Install dependencies (Backend)
        working-directory: /home/runner/work/demo/demo/TODO/todo_backend
        run: npm install

      # Step 6: Setup Environment Variables for MongoDB
      - name: Setup Environment Variables
        run: |
          echo "MONGO_URI=mongodb://root:example@localhost:27017/TODO" >> $GITHUB_ENV

      # Step 7: Start MongoDB
      - name: Start MongoDB
        run: |
          sudo systemctl start mongodb

      # Step 8: Start Backend (With Increased Sleep Time)
      - name: Start Backend
        working-directory: /home/runner/work/demo/demo/TODO/todo_backend
        run: |
          npm start &
          sleep 10  # Increased sleep time to ensure backend is ready

      # Step 9: Verify Backend is Running
      - name: Verify Backend is Running
        run: |
          if curl -s http://localhost:5000/health; then
            echo "Backend is running!"
          else
            echo "Backend is NOT running. Exiting..."
            exit 1
          fi

      # Step 10: Run Backend Tests
      - name: Run Backend Tests
        working-directory: /home/runner/work/demo/demo/TODO/todo_backend
        run: npm test

      # Step 11: Save Task Locally
      - name: Save Task Locally
        run: |
          curl -X POST http://localhost:5000/add-task -d '{"task": "Sample task"}' -H "Content-Type: application/json"

      # Step 12: Deploy to Netlify
      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy --prod --dir=/home/runner/work/demo/demo/TODO/todo_frontend/build --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN
